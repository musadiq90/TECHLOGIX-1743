CREATE OR REPLACE FUNCTION OFSFTP.TLX_RV_TXN_CSTM (BATCHID    VARCHAR2,
                                                    MISDATE    VARCHAR2)
   RETURN NUMBER
AS
MIS_DATE   DATE := TO_DATE (MISDATE, 'YYYYMMDD');
L_TOTAL NUMBER := 0;
L_SUCCESS NUMBER := 0;
L_ERROR NUMBER := 0;
   LV_BATCH_ID   VARCHAR2 (3);
BEGIN

LV_BATCH_ID :=
      SUBSTR (
         SUBSTR (BATCHID, -10),
         INSTR (SUBSTR (BATCHID, -10), '_') - LENGTH (SUBSTR (BATCHID, -10)));

    DBMS_OUTPUT.PUT_LINE ('STARTING TLX_RV_TXN_CSTM');
    SELECT COUNT(1) INTO L_TOTAL FROM FTP_STTM_RT_TXN_CUSTOM WHERE STATUS IN ('AA', 'CE') AND BATCH_ID = LV_BATCH_ID;
    DBMS_OUTPUT.PUT_LINE ('TOTAL UNPROCESS ENTRIES::'||L_TOTAL);
    FOR REC IN (SELECT XREF,STATUS FROM FTP_STTM_RT_TXN_CUSTOM WHERE STATUS IN ('AA', 'CE') and FIC_MIS_DATE = MIS_DATE AND BATCH_ID = LV_BATCH_ID)
    LOOP
        IF NOT FN_REVERSE_RT_TXN(REC.XREF,REC.STATUS) THEN
            L_ERROR := L_ERROR + 1;
        ELSE 
            L_SUCCESS := L_SUCCESS + 1;
        END IF;
    END LOOP;
    COMMIT;
    DBMS_OUTPUT.PUT_LINE ('TOTAL ENTRIES POSTED SUCCESSFULLY::'||L_SUCCESS);
    DBMS_OUTPUT.PUT_LINE ('TOTAL ENTRIES IN ERROR::'||L_ERROR);
    DBMS_OUTPUT.PUT_LINE ('ENDING TLX_RV_TXN_CSTM');
    RETURN 1;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE_APPLICATION_ERROR (
         -20001,
         'An error was encountered - ' || SQLCODE || ' -ERROR- ' || SQLERRM
      );

  DBMS_OUTPUT.PUT_LINE ('TLX_RV_TXN_CSTM FAILED');
  RETURN 0;
END;
/
