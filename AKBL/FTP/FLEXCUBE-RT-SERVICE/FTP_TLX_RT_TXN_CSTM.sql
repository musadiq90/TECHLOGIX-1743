CREATE OR REPLACE FUNCTION OFSFTP.FTP_TLX_RT_TXN_CSTM (BATCHID    VARCHAR2,
                                                       MISDATE    VARCHAR2)
   RETURN NUMBER
AS
   MIS_DATE      DATE := TO_DATE (MISDATE, 'YYYYMMDD');
   L_TOTAL       NUMBER := 0;
   L_SUCCESS     NUMBER := 0;
   L_ERROR       NUMBER := 0;
   LV_BATCH_ID   VARCHAR2 (3);
BEGIN
   LV_BATCH_ID :=
      SUBSTR (
         SUBSTR (BATCHID, -10),
         INSTR (SUBSTR (BATCHID, -10), '_') - LENGTH (SUBSTR (BATCHID, -10)));

   DBMS_OUTPUT.PUT_LINE ('STARTING FTP_TLX_RT_TXN_CSTM');

   SELECT COUNT (1)
     INTO L_TOTAL
     FROM FTP_STTM_RT_TXN_CUSTOM
    WHERE     STATUS IN ('U')
          AND BATCH_ID = LV_BATCH_ID
          AND FIC_MIS_DATE = MIS_DATE;

   DBMS_OUTPUT.PUT_LINE ('TOTAL UNPROCESS ENTRIES::' || L_TOTAL);

   FOR REC
      IN (SELECT XREF, STATUS
            FROM FTP_STTM_RT_TXN_CUSTOM
           WHERE     STATUS IN ('U')
                 AND FIC_MIS_DATE = MIS_DATE
                 AND BATCH_ID = LV_BATCH_ID)
   LOOP
      IF NOT FTP_FN_CREATE_RT_TXN (REC.XREF, REC.STATUS)
      THEN
         UPDATE FTP_STTM_RT_TXN_CUSTOM_LOG CL
            SET MESSAGE = 'ERROR'
          WHERE CL.XREF = REC.XREF;
      ELSE
         UPDATE FTP_STTM_RT_TXN_CUSTOM_LOG CL
            SET MESSAGE = 'SUCCESS'
          WHERE CL.XREF = REC.XREF;
      END IF;
   END LOOP;

   COMMIT;
   DBMS_OUTPUT.PUT_LINE ('TOTAL ENTRIES POSTED SUCCESSFULLY::' || L_SUCCESS);
   DBMS_OUTPUT.PUT_LINE ('TOTAL ENTRIES IN ERROR::' || L_ERROR);
   DBMS_OUTPUT.PUT_LINE ('ENDING TLX_RT_TXN_CSTM');
   RETURN 1;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE_APPLICATION_ERROR (
         -20001,
         'An error was encountered - ' || SQLCODE || ' -ERROR- ' || SQLERRM);

      DBMS_OUTPUT.PUT_LINE ('FTP_TLX_RT_TXN_CSTM FAILED');
      RETURN 0;
END;
/
